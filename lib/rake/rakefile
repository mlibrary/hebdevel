# This is a rakefile

require 'rake/clean'
require 'fileutils'

REPODIR=ENV['REPODIR']

# hebepub locations
HEBEPUBDIR=File.join(REPODIR, 'hebepub')
HEBEPUBJARSPATH=File.join(HEBEPUBDIR, 'target', 'lib', 'jars')

# epubcheck src/dependencies
HEBECDIR=File.join(REPODIR, 'epubcheck')
HEBECJAR='epubcheck-jar-with-dependencies.jar'
HEBECJARPATH=File.join(HEBEPUBJARSPATH, HEBECJAR)
HEBECSRCPATH=File.join(HEBECDIR, 'pom.xml')

# hebimg src/dependencies
HEBIMGDIR=File.join(REPODIR, 'hebimg')
HEBIMGJAR='hebimg-jar-with-dependencies.jar'
HEBIMGJARPATH=File.join(HEBEPUBJARSPATH, HEBIMGJAR)
HEBIMGJP2JAR='hebimgjp2-jar-with-dependencies.jar'
HEBIMGJP2JARPATH=File.join(HEBEPUBJARSPATH, HEBIMGJP2JAR)
HEBIMGSRCPATH=File.join(HEBIMGDIR, 'src', 'main', 'java', 'edu', 'umich', 'mlib', 'HebImg.java')

# hebxslt src/dependencies
HEBXSLTDIR=File.join(REPODIR, 'hebxslt')
HEBXSLTJAR='hebxslt-jar-with-dependencies.jar'
HEBXSLTJARPATH=File.join(HEBEPUBJARSPATH, HEBXSLTJAR)
HEBXSLTSRCPATH=File.join(HEBXSLTDIR, 'src', 'main', 'java', 'edu', 'umich', 'mlib', 'HebXSLT.java')

namespace :hebdevel do

    # Productions
    desc 'build all'
    task :build => [ :epubcheck, :hebimg, :hebxslt ]

    desc 'epubcheck'
    task :epubcheck => [ HEBECJARPATH ]

    desc 'hebimg'
    task :hebimg => [ HEBIMGJARPATH ]

    desc 'hebxslt'
    task :hebxslt => [ HEBXSLTJARPATH ]

    task :clobber do
        mvn_clean(HEBECDIR)
        mvn_clean(HEBIMGDIR)
        mvn_clean(HEBXSLTDIR)
    end

    # Generate epubcheck jar
    file HEBECJARPATH => [ HEBECSRCPATH, HEBEPUBJARSPATH ] do
        # Remove the jar file if it exist.
        FileUtils.rm(HEBECJARPATH, :force => true)

        # Build/install the JARs. Invoke maven.
        Dir.chdir(HEBECDIR)
        sh %{ mvn install } do |ok, res|
            if ! ok
                puts "mvn install failed for ${HEBECJAR} (status = #{res.exitstatus})"
            end
        end

        # Copy JARs to lib/jars directory
        cp(File.join(HEBECDIR, 'target', HEBECJAR), HEBECJARPATH)
    end

    # Generate hebimg jar
    file HEBIMGJARPATH => [ HEBIMGSRCPATH, HEBEPUBJARSPATH ] do
        # Remove the jar files if they exist.
        FileUtils.rm(HEBIMGJARPATH, :force => true)
        FileUtils.rm(HEBIMGJP2JARPATH, :force => true)

        # Build/install the JARs. Invoke maven.
        Dir.chdir(HEBIMGDIR)
        sh %{ mvn install } do |ok, res|
            if ! ok
                puts "mvn install failed for ${HEBIMGJAR} (status = #{res.exitstatus})"
            end
        end

        # Copy JARs to lib/jars directory
        cp(File.join(HEBIMGDIR, 'target', HEBIMGJAR), HEBIMGJARPATH)
        cp(File.join(HEBIMGDIR, 'target', HEBIMGJP2JAR), HEBIMGJP2JARPATH)
    end

    # Generate hebxslt jar
    file HEBXSLTJARPATH => [ HEBXSLTSRCPATH, HEBEPUBJARSPATH ] do
        # Remove the jar file if it exist.
        FileUtils.rm(HEBXSLTJARPATH, :force => true)

        # Build/install the JARs. Invoke maven.
        Dir.chdir(HEBXSLTDIR)
        sh %{ mvn install } do |ok, res|
            if ! ok
                puts "mvn install failed for ${HEBXSLTJAR} (status = #{res.exitstatus})"
            end
        end

        # Copy JARs to lib/jars directory
        cp(File.join(HEBXSLTDIR, 'target', HEBXSLTJAR), HEBXSLTJARPATH)
    end

    # Convenience method for cleaning a JAR.
    def mvn_clean(bdir)
        # Invoke maven.
        Dir.chdir(bdir)
        sh %{ mvn clean } do |ok, res|
            if ! ok
                puts "mvn clean failed for ${bdir} (status = #{res.exitstatus})"
            end
        end
    end

    directory HEBEPUBJARSPATH

    CLOBBER.include(HEBECJARPATH)
    CLOBBER.include(HEBIMGJARPATH)
    CLOBBER.include(HEBIMGJP2JARPATH)
    CLOBBER.include(HEBXSLTJARPATH)
    CLOBBER.include(File.join(HEBEPUBDIR, 'target', 'lib', 'rake', 'vendor'))

end
